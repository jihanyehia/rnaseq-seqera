// Homo sapiens:
// Reads: /home/jyehia/Novogene/raw_data/*_231_*/*_{1,2}.fq.gz (Jihan, 6 samples)
// Genome: /home/jyehia/human/hg38.fa
// RefFlat: /home/jyehia/human/refFlat.txt.gz
// Annotation: /home/jyehia/human/hg38.ncbiRefSeq.gtf
//-------------------------------------------------------------------------------------------------------------------------------------
// Drosophila melanogaster:
// /home/jyehia/BPA/Rashi_samples/*_{R1,R2}_001.fastq.gz (Rashi, 12 samples after adding An's WTs and BPAs)
// /home/wlee/projects/BPA/RNA-seq/FMR1_BPA_BPF_BPS/high_dose_1mM/fastq/BPA_BPF_BPS_WT/*_{R1,R2}_001.fastq.gz (An, 12 samples)
// /home/wlee/projects/BPA/RNA-seq/RNA_data_firstRound/{A,B,C,D}*_L004_R1_001.fastq.gz (Eden, 8 samples)
//--------------------------------------------------------------------------------------------------------------------------------------
// Mus musculus:
// Reads: /home/chan/mRNA_seq_pipeline/resources/data_1/*_{1,2}.fastq.gz (Crystal, 9 samples)
//--------------------------------------------------------------------------------------------------------------------------------------

plugins {
    id 'nf-schema@2.2.0'
}

conda {
    enabled = true
    createTimeout = "2 h"
}

params {
    schema = "$projectDir/nextflow_schema.json"
    project = ""
    metadata = ""
    PEreads = ""
    SEreads = ""
    genome = ""
    annotation = ""
    refFlat = ""
    outdir = "gs://leelab-rnaseq-pipeline/RNASeq_results/${params.project}" 
    short_minQ = 20
    short_minLen = 20
    long_minQ = 7
    long_minLen = 100
    overhang = 149 //should be read length - 1
    strandedness = 0 //0 = unstranded, 1 = stranded, 2 = reversely stranded
    species = ''
    collections = 'H'
    subcategories = ''
    pvalue = 0.05
    lfcThreshold = 0
    nperm = 1000
    isLong = false
    isSingle = false
    help = false
}

process {
    executor = 'google-batch'
    cpus = 1
    memory = 2.GB 
    withLabel: high {
        memory = 55.GB
        cpus = 2
    }
    withLabel: multi_short {
        cpus = 2
        memory = 10.GB
    }
    withLabel: multi_long { 
        cpus = 8
        memory = 20.GB
    }
}

//Use a timestamp to create a unique filename
def timestamp = new Date().format('yyyMMdd_HHmmss')
timeline {
    enabled = true
    file = "$params.outdir/timeline_${timestamp}.html"

}

report {
    enabled = true
    file = "$params.outdir/report_${timestamp}.html"
}

trace {
    enabled = true
    file = "$params.outdir/trace_${timestamp}.txt"
}

dag {
    enabled = true
    file = "$params.outdir/dag_${timestamp}.html"
}
